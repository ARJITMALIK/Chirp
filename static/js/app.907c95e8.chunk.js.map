{"version":3,"sources":["assets/fav-icon.png","firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ChatScreen.js","screens/SplashScreen.js","screens/ForgotPassword.js","screens/ProfileScreen.js","App.js"],"names":["module","exports","app","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","LoginScreen","navigation","useState","Email","setEmail","Password","setPassword","useEffect","onAuthStateChanged","user","replace","KeyboardAvoidingView","style","styles","container","StatusBar","Image","img","source","require","Text","secTitle","TextInput","placeholder","value","onChangeText","secureTextEntry","TouchableOpacity","btn","onPress","signInWithEmailAndPassword","catch","error","errorMessage","message","alert","btnText","navigate","StyleSheet","create","flex","justifyContent","alignItems","title","fontSize","color","marginBottom","marginTop","fontWeight","borderWidth","borderColor","width","borderRadius","paddingHorizontal","paddingVertical","backgroundColor","height","resizeMode","margin","RegisterScreen","Name","setName","PhotoURL","setPhotoURL","createUserWithEmailAndPassword","then","userCredential","updateProfile","displayName","photoURL","ChatScreen","useLayoutEffect","setOptions","headerLeft","marginLeft","rounded","uri","currentUser","headerRight","signOut","marginRight","messages","setMessages","collection","orderBy","onSnapshot","snapshot","docs","map","doc","_id","data","createdAt","toDate","text","onSend","useCallback","previousMessages","GiftedChat","append","add","View","showAvatarForEveryMessage","renderUsernameOnMessage","renderAvatarOnTop","scrollToBottom","renderBubble","props","wrapperStyle","left","right","email","name","avatar","SplashScreen","ForgotPassword","sendPasswordResetEmail","ProfileScreen","behavior","LogBox","ignoreAllLogs","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","options","headerShown","component","headerStyle","headerTintColor","headerTitleAlign","headerTitleStyle"],"mappings":"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","file":"static/js/app.907c95e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fav-icon.6c4588c8.png\";","import firebase from 'firebase'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAf-BoWJsg-klcdHmdMA8JaQYuzgBbkuqI',\n  authDomain: 'notty-ebfcc.firebaseapp.com',\n  projectId: 'notty-ebfcc',\n  storageBucket: 'notty-ebfcc.appspot.com',\n  messagingSenderId: '385673913296',\n  appId: '1:385673913296:web:5adae9b7bf5f7874540fd5',\n}\nlet app\nif (firebase.apps.length === 0) {\n  app = firebase.initializeApp(firebaseConfig)\n} else {\n  app = firebase.app()\n}\nconst auth = firebase.auth()\nconst db = app.firestore()\nexport { auth, db }\n","import React, { useState, useEffect } from 'react'\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  Image,\n  TextInput,\n} from 'react-native'\nimport { auth } from '../firebase'\nimport { StatusBar } from 'expo-status-bar'\n\nconst LoginScreen = ({ navigation }) => {\n  const [Email, setEmail] = useState('')\n  const [Password, setPassword] = useState('')\n\n  const login = () => {\n    auth.signInWithEmailAndPassword(Email, Password).catch((error) => {\n      const errorMessage = error.message\n      alert(errorMessage)\n    })\n  }\n\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        navigation.replace('Chat')\n      } \n    })\n    return unsubscribe\n  }, [])  \n\n  return (\n    <KeyboardAvoidingView style={styles.container}>\n      <StatusBar style = \"dark\" />\n      <Image style={styles.img} source = {require(\"../assets/fav-icon.png\")} />\n      <Text style={styles.secTitle}>Login to get started</Text>\n\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Email\"\n        value={Email}\n        onChangeText={setEmail}\n        // leftIcon={{ type: 'material', name: 'email' }}\n      />\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        value={Password}\n        onChangeText={setPassword}\n        // onSubmitEditing={} NOTE: fix this\n        // leftIcon={{ type: 'material', name: 'lock' }}\n      />\n      <TouchableOpacity style={styles.btn} onPress={login}>\n        <Text style={styles.btnText}>Login</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n        <Text>Not have an account? SignUp</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress = {() => navigation.navigate('ForgotPass')}>\n        <Text>Forgot Password!!</Text>\n      </TouchableOpacity>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    color: '#8d12e5',\n    marginBottom: 40,\n    marginTop: 30,\n    fontWeight: 'bold',\n  },\n  secTitle: {\n    fontSize: 18,\n  },\n  TextInput: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    borderWidth: 2,\n    borderColor: '#8d12e5',\n    marginTop: 10,\n    width: 250,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n  btn: {\n    width: 200,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    backgroundColor: '#8d12e5',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginTop: 20,\n    marginBottom: 5,\n  },\n  btnText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15,\n  },\n      img:{\n        width: 150,\n        height: 150,\n        resizeMode: \"contain\",\n        margin: 20\n    }\n})\n","import React, { useState, useEffect } from 'react'\nimport {\n  KeyboardAvoidingView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  TextInput,\n} from 'react-native'\nimport { auth } from '../firebase'\n\nconst RegisterScreen = ({ navigation }) => {\n  const [Email, setEmail] = useState('')\n  const [Password, setPassword] = useState('')\n  const [Name, setName] = useState('')\n  const [PhotoURL, setPhotoURL] = useState('')\n\n  const register = () => {\n    auth\n      .createUserWithEmailAndPassword(Email, Password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user\n        user\n          .updateProfile({\n            displayName: Name,\n            photoURL: PhotoURL\n              ? PhotoURL\n              : 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.pinimg.com%2Foriginals%2Fc0%2Ffc%2Ff1%2Fc0fcf164efd9a75a5f7d8065d4365451.jpg&f=1&nofb=1',\n          })\n          .then(() => {\n            // Update successful\n            // ...\n          })\n          .catch((error) => {\n            // An error occurred\n            // ...\n          })\n        navigation.replace('Chat')\n      })\n      .catch((error) => {\n        const errorMessage = error.message\n        alert(errorMessage)\n        // ..\n      })\n  }\n\n  return (\n    <KeyboardAvoidingView style={styles.container}>\n      <Text style={styles.title}>Create a new account</Text>\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Name\"\n        value={Name}\n        onChangeText={setName}\n        // leftIcon={{ type: 'material', name: 'email' }}\n      />\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Email\"\n        value={Email}\n        onChangeText={setEmail}\n        // leftIcon={{ type: 'material', name: 'email' }}\n      />\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        value={Password}\n        onChangeText={setPassword}\n        // onSubmitEditing={} NOTE: fix this\n        // leftIcon={{ type: 'material', name: 'lock' }}\n      />\n      <TextInput\n        style={styles.TextInput}\n        placeholder=\"Photo URL\"\n        value={PhotoURL}\n        onChangeText={setPhotoURL}\n        // leftIcon={{ type: 'material', name: 'email' }}\n      />\n      <TouchableOpacity style={styles.btn} onPress={register}>\n        <Text style={styles.btnText}>Sign Up</Text>\n      </TouchableOpacity>\n\n      {/* <TouchableOpacity>\n        <Text>Forgot Password!!</Text>\n      </TouchableOpacity> */}\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    color: '#8d12e5',\n    marginBottom: 40,\n    marginTop: 30,\n    fontWeight: 'bold',\n  },\n  TextInput: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    borderWidth: 2,\n    borderColor: '#8d12e5',\n    marginTop: 10,\n    width: 250,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n  btn: {\n    width: 200,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    backgroundColor: '#8d12e5',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginTop: 20,\n    marginBottom: 5,\n  },\n  btnText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15,\n  },\n})\n","import React, { useLayoutEffect, useState, useCallback, useEffect } from 'react'\nimport { StyleSheet, Text, TouchableOpacity, View} from 'react-native'\nimport { Avatar } from 'react-native-elements'\nimport { auth, db } from '../firebase'\nimport { GiftedChat , Bubble , UserAvatar } from 'react-native-gifted-chat'\nimport { StatusBar } from 'expo-status-bar'\n\nconst ChatScreen = ({ navigation }) => {\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerLeft: () => (\n        <TouchableOpacity style={{ marginLeft: 10 }} onPress={() => navigation.navigate('Profile')}>\n          <Avatar\n            rounded\n            source={{\n              uri: auth?.currentUser?.photoURL,\n            }}\n          />\n        </TouchableOpacity>\n      ),\n      headerRight: () => (\n        <TouchableOpacity onPress={signOut} style={{ marginRight: 10 }}>\n          <Text style = {{color: \"#fff\"}} >Logout</Text>\n        </TouchableOpacity>\n      ),\n    })\n  }, [])\n\n  const signOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        navigation.replace('Login')\n      })\n      .catch((error) => {\n        // An error happened.\n      })\n  }\n\n  const [messages, setMessages] = useState([])\n\n  // useEffect(() => {\n  //   setMessages([\n  //     {\n  //       _id: 1,\n  //       text: 'Hello developer',\n  //       createdAt: new Date(),\n  //       user: {\n  //         _id: 2,\n  //         name: 'React Native',\n  //         avatar: 'https://placeimg.com/140/140/any',\n  //       },\n  //     },\n  //   ])\n  // }, [])\n  useLayoutEffect(() => {\n    const unsubscribe = db\n      .collection('chats')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapshot) =>\n        setMessages(\n          snapshot.docs.map((doc) => ({\n            _id: doc.data()._id,\n            createdAt: doc.data().createdAt.toDate(),\n            text: doc.data().text,\n            user: doc.data().user,\n          })),\n        ),\n      )\n    return unsubscribe\n  }, [])\n\n  const onSend = useCallback((messages = []) => {\n    setMessages((previousMessages) =>\n      GiftedChat.append(previousMessages, messages),\n    )\n    const { _id, createdAt, text, user } = messages[0]\n    db.collection('chats').add({\n      _id,\n      createdAt,\n      text,\n      user,\n    })\n  }, [])\n\n  function renderBubble(props) {\n    return (\n        <Bubble\n            {...props}\n            wrapperStyle={{\n              left: {\n                backgroundColor: '#e0e0e0',\n              },\n              right:{\n                backgroundColor: '#8d12e5',\n              },\n            }}\n        />\n    );\n  }\n\n  // function renderAvatar(props){\n  //   return (\n  //     <Image \n  //       source={{\n  //             uri: auth?.currentUser?.photoURL,\n  //           }}\n  //     />\n  //   )\n  // }\n\n  return (\n    <>\n    <StatusBar style = \"light\" />\n    <View style = {styles.container}>\n    <GiftedChat\n      messages={messages}\n      showAvatarForEveryMessage={false}\n      renderUsernameOnMessage={true}\n      renderAvatarOnTop={true}\n      scrollToBottom={true}\n      renderBubble={renderBubble}\n      // renderAvatar={renderAvatar}\n      onSend={(messages) => onSend(messages)}\n      user={{\n        _id: auth?.currentUser?.email,\n        name: auth?.currentUser?.displayName,\n        avatar: auth?.currentUser?.photoURL,\n      }}\n      // renderInputToolbar={props => customInputToolBar({props})}\n    />\n    </View>\n    </>\n  )\n}\n\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n})\n","import React , {useEffect} from 'react'\nimport { StyleSheet, Image, View } from 'react-native'\nimport {auth} from \"../firebase\"\nimport { StatusBar } from 'expo-status-bar'\n\nconst SplashScreen = ({ navigation }) => {\n\n    useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        navigation.replace('Chat')\n      } else {\n        navigation.replace(\"Login\")\n      }\n    })\n    return unsubscribe\n  }, [])\n\n    return (\n        <View style = {styles.container}>\n            <StatusBar style = \"light\" />\n            <Image source = {require(\"../assets/fav-icon.png\")} style = {styles.img}/>\n        </View>\n    )\n}\n\nexport default SplashScreen\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: \"#8d12e5\",\n    },\n    img:{\n        width: 300,\n        height: 300,\n        resizeMode: \"contain\",\n        margin: 20\n    }\n})\n","import React , {useState} from 'react'\nimport { StyleSheet, TextInput, TouchableOpacity , Text, KeyboardAvoidingView } from 'react-native'\n\nconst ForgotPassword = () => {\n    const [Email , setEmail] = useState('')\n\n    const resetPassword = () => {\n        auth.sendPasswordResetEmail(Email)\n        .then(() => {\n        // Password reset email sent!\n        // ..\n        })\n        .catch((error) => {\n        const errorMessage = error.message;\n        alert(errorMessage)\n        // ..\n  });\n  }\n\n    return (\n        <KeyboardAvoidingView style={styles.container}>\n            <TextInput\n        style={styles.TextInput}\n        placeholder=\"Email\"\n        value={Email}\n        onChangeText={setEmail}\n        // leftIcon={{ type: 'material', name: 'email' }}\n      />\n      <TouchableOpacity onPress={resetPassword} style={styles.btn} >\n          <Text style={styles.btnText}>Send Password Reset Link</Text>\n      </TouchableOpacity>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default ForgotPassword\n\nconst styles = StyleSheet.create({\n    TextInput: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    borderWidth: 2,\n    borderColor: '#8d12e5',\n    marginTop: 10,\n    width: 250,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n    btn: {\n    width: 250,\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    backgroundColor: '#8d12e5',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n    marginTop: 20,\n    marginBottom: 5,\n  },\n  btnText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 15,\n  },\n})\n","import React, { useState } from 'react'\nimport { StyleSheet, Text, View, Image, TouchableOpacity, KeyboardAvoidingView, TextInput } from 'react-native'\nimport { auth } from \"../firebase\"\nimport { StatusBar } from 'expo-status-bar'\n\n\nconst ProfileScreen = ({ navigation }) => {\n\n\n\n    const [Name, setName] = useState('')\n    const [PhotoURL, setPhotoURL] = useState('')\n\n    const UpdateProfile = () => {\n        auth.currentUser.updateProfile({\n            // displayName: Name ? Name : auth.currentUser.displayName ,\n            photoURL: PhotoURL ? PhotoURL : auth.currentUser.photoURL,\n        }).then(() => {\n            navigation.navigate(\"Chat\")\n            // Update successful\n            // ...\n        }).catch((error) => {\n            const errorMessage = error.message\n            alert(errorMessage)\n            // An error occurred\n            // ...\n        });\n    }\n\n\n\n    return (\n        <KeyboardAvoidingView behavior = \"padding\" style={styles.container}>\n            <StatusBar style=\"dark\" />\n\n            <TouchableOpacity>\n                <Image\n                    source={{\n                        uri: auth?.currentUser?.photoURL\n                    }}\n                    style={styles.img}\n                />\n            </TouchableOpacity>\n            {/* <Text style={styles.text}>{auth?.currentUser?.email}</Text>\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder={auth?.currentUser?.displayName}\n                    value={Name}\n                    onChangeText={setName}\n                // leftIcon={{ type: 'material', name: 'email' }}\n                /> */}\n                <TextInput\n                    style={styles.TextInput}\n                    placeholder=\"Photo URL\"\n                    value={PhotoURL}\n                    onChangeText={setPhotoURL}\n                // leftIcon={{ type: 'material', name: 'email' }}\n                />\n                <Text style={{ marginTop: 10 }}>Enter an image address to set it as your profile picture.</Text>\n                <Text style={{ marginTop: 10, color: \"red\" }}>!!For security purpose you can't change your username yet</Text>\n                <TouchableOpacity style={styles.btn} onPress={UpdateProfile} >\n                    <Text style={styles.btnText}>Update Profile</Text>\n                </TouchableOpacity>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default ProfileScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    img: {\n        width: 300,\n        height: 300,\n        resizeMode: \"contain\",\n        margin: 20,\n        borderRadius: 500\n    },\n    text: {\n        fontWeight: \"bold\",\n        fontSize: 18\n    },\n    TextInput: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        borderWidth: 2,\n        borderColor: '#8d12e5',\n        marginTop: 10,\n        width: 250,\n        borderRadius: 5,\n        paddingHorizontal: 10,\n        paddingVertical: 5,\n    },\n    btn: {\n        width: 200,\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n        backgroundColor: '#8d12e5',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 5,\n        marginTop: 20,\n        marginBottom: 20,\n        marginBottom: 5,\n    },\n    btnText: {\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: 15,\n    },\n})\n","import { StatusBar } from 'expo-status-bar'\nimport React from 'react'\nimport { LogBox } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ChatScreen from './screens/ChatScreen'\nimport SplashScreen from \"./screens/SplashScreen\"\nimport ForgotPassword from \"./screens/ForgotPassword\"\nimport ProfileScreen from \"./screens/ProfileScreen\"\n\nLogBox.ignoreAllLogs();\nconst Stack = createNativeStackNavigator()\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name = \"Splash\"\n          options={{\n            headerShown: false,\n          }}\n        component = {SplashScreen} />\n        <Stack.Screen\n          options={{\n            headerShown: false,\n          }}\n          name=\"Login\"\n          component={LoginScreen}\n        />\n        <Stack.Screen name = \"ForgotPass\" component= {ForgotPassword}/>\n        <Stack.Screen name=\"Register\" component={RegisterScreen} />\n        <Stack.Screen name=\"Chat\" component={ChatScreen} options={{\n          title: 'CHIRP',\n          headerStyle: {\n            backgroundColor: '#8d12e5',\n          },\n          headerTintColor: '#fff',\n          headerTitleAlign: 'center',\n          headerTitleStyle: {\n            fontWeight: 'bold',\n          },\n        }}/>\n        <Stack.Screen name = \"Profile\" component={ProfileScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n"],"sourceRoot":""}